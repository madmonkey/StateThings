@* TransactionSnippet Index Page *@
@model StateInterface.Areas.Design.Models.SnippetModel
<div class="row">
    <div class="col-xs-12">
        <div class="pull-right padRight leadSmaller">
            <span class="padRight">Records Center</span><select data-bind="options: RecordsCenterSelector.RecordsCenters, optionsText: 'Name', optionsValue: 'Name', value: RecordsCenterSelector.SelectedRecordsCenterName"></select>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <ol class="breadcrumb">
            <li><a data-bind="attr: { href: DesignHomeUrl }">Design</a></li>
            <li class="active">Transactions</li>
        </ol>
        <div class="h2 padLeft">Transactions Design<a href="#" data-bind="visible: CanDesignManage, click: addSnippet" class="glyphicon glyphicon-plus-sign padLeft" title="Add Transaction"></a></div>
        <div class="loading" style="margin-left: 350px; margin-top: -40px;" data-bind="visible: snippetsAreLoading"></div>
    </div>
</div>
<div data-bind="template: { name: 'noSnippetFound-template' }"></div>
<div class="row">
    <div class="col-xs-12">
        <div data-bind="template: { name: 'snippetList-template' }"></div>
    </div>
</div>

<div class="modal fade" data-bind="bootstrapShowModal: snippetModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a class="close" data-dismiss="modal" aria-hidden="true">×</a>
                <h3>New Transaction<span class="lead"></span></h3>
            </div>
            <form role="form">
                <div class="modal-body">
                    <div class="form-group">
                        <label>Name</label>
                        <input autofocus class="fieldInputMedium" type="text" maxlength="50" data-bind="value: SnippetParameter.Name, css: {error: SnippetParameter.Name.hasError}, valueUpdate:'afterkeydown'">
                        <span data-bind="visible: SnippetParameter.Name.hasError, text: SnippetParameter.Name.validationMessage" class="errorMessage"></span>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea class="fieldInputMedium" rows="3" maxlength="100" data-bind="value: SnippetParameter.Description, css: {error: SnippetParameter.Description.hasError}, valueUpdate:'afterkeydown'"></textarea>
                        <span data-bind="visible: SnippetParameter.Description.hasError, text: SnippetParameter.Description.validationMessage" class="errorMessage"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <a href="#" data-dismiss="modal" class="btn btn-primary" data-bind="click: createSnippet, css: {linkDisabled: isSnippetError}">Save</a>
                    <a class="btn btn-default" data-dismiss="modal">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/html" id="noSnippetFound-template">
    <div class="row" data-bind="visible: showNoSnippetFound()">
        <div class="col-xs-12">
            <br />
            <br />
            <h2 class="text-center text-danger">No transaction snippets were found for this Records Center</h2>
        </div>
    </div>
</script>

<script type="text/html" id="snippetList-template">
    <div class="row">
        <div class="col-xs-12">
            <br />
            <div class="padLeft" data-bind="foreach: TransactionSnippets">
                <a data-bind="attr: { href: SnippetDetailsUrl } ">
                    <span class="formLink" data-bind="html: TokenName, attr: { Title: Description } "></span>
                </a>
                <span class="leadSmaller" data-bind="html: Description"></span>
                <br />
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">
    var initialData = @Html.Raw(Model.InitialData)
</script>
@section scripts{
    @Scripts.Render("~/bundles/stateinterface_design_snippet")
}